# 숫자 1, 2, 3으로만 이루어지는 수열이 있다.
# 임의의 길이의 인접한 두 개의 부분 수열이 동일한 것이 있으면, 그 수열을 나쁜 수열이라고 부른다.
# 그렇지 않은 수열은 좋은 수열이다.

# 나쁜 수열의 예
# 33
# 32121323
# 123123213

# 다음은 좋은 수열의 예
# 2
# 32
# 32123
# 1232123

# 길이가 N인 좋은 수열들을 N자ㅣ의 정수로 보아 그중 가장 작은 수를 나타내는 수열을 구하는 프로그램을 작성
# 예를 들어, 1233121과 2123212는 모두 좋은 수열이지만 그 중에서 작은 수를 나타내는 수열은 1233121이다.

# 입력 N : 1 <= N > 80

# 출력
# 첫 번째 줄에 1, 2, 3 으로만 이루어져 있는 길이가 N인 좋은 수열들 중에서 가장 작은 수를 나타내는 수열만 출력한다.
# 수열을 이루으는 1, 2, 3들 사이에는 빈칸을 두지 않는다.


# 입력 7

# 출력 1213121

import sys

def input():
    return sys.stdin.readline().rstrip()

N = int(input()) # 2

result = float("inf")

# 1 1 ( 인접 수열, 0 : 1, 1 : 1 => X )
# 1 2 ( 인접 수열, 0 : 1, 1 : 2 => O )
# 이때 이미 return!
# 1 3 ( 인접 수열, 0 : 1, 1 : 3 => O )


# 1 1 1 ( X )
# 인접 수열 검사
# 길이 1
# [0] : 1 -> [1] : 1 => X bad

# 1 1 2 ( X )

# 1 1 3 ( X )

# 1 2 1 ( 0 )
# 길이 1 [0] == [1] False
# 길이 1 [1] == [2] False
# 길이 2 [0:2] == [1:3] False
# 길이 3 ( 비교할 수 없음 ) 검사 최소 길이는 전체 길이 N-1 임

# 1 1 1 1 ( X )
# 1 1 1 2 ( X )
# 1 1 1 3 ( X )
# 1 1 2 1 ( X )
# 1 1 2 2 ( X )
# 1 1 2 3 ( X )
# 1 1 3 1 ( X )
# 1 1 3 2 ( X )
# 1 1 3 3 ( X )
# 1 2 1 1 ( X )
# 1 2 1 2 ( X )
# 1 2 1 3 ( O )

#                   Root
#                    |
#                    1
#                   / \
#                  /   \
#                 /     \
#                12     13 (X: 나쁜 수열)
#               / \
#              /   \
#             /     \
#           121     123
#            |       |
#           1213   1231 (X: 나쁜 수열)
result = [1]
